apiVersion: v1
kind: Namespace
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: nativelb
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: agents.k8s.native-lb
spec:
  group: k8s.native-lb
  names:
    kind: Agent
    plural: agents
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cluster:
              type: string
            hostName:
              type: string
            ipAddress:
              type: string
            port:
              format: int32
              type: integer
          required:
          - hostName
          - ipAddress
          - port
          - cluster
          type: object
        status:
          properties:
            KeepAlivedPid:
              format: int64
              type: integer
            connectionStatus:
              type: string
            lastUpdate:
              format: date-time
              type: string
            lbPid:
              format: int64
              type: integer
            startTime:
              type: string
            time:
              type: string
            uptime:
              format: int64
              type: integer
            version:
              type: string
          type: object
      required:
      - spec
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: backends.k8s.native-lb
spec:
  group: k8s.native-lb
  names:
    kind: Backend
    plural: backends
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            host:
              type: string
            port:
              format: int32
              type: integer
            priority:
              format: int64
              type: integer
            weight:
              format: int64
              type: integer
          required:
          - host
          - port
          type: object
        status:
          properties:
            activeConnections:
              format: int64
              type: integer
            live:
              type: boolean
            refusedConnections:
              format: int64
              type: integer
            rx:
              format: int64
              type: integer
            rxSecond:
              format: int64
              type: integer
            totalConnections:
              format: int64
              type: integer
            tx:
              format: int64
              type: integer
            txSecond:
              format: int64
              type: integer
          required:
          - live
          - totalConnections
          - activeConnections
          - refusedConnections
          - rx
          - tx
          - rxSecond
          - txSecond
          type: object
      required:
      - spec
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: clusters.k8s.native-lb
spec:
  group: k8s.native-lb
  names:
    kind: Cluster
    plural: clusters
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            default:
              description: 'Only one can exist true: any service of type loadbalancer
                will be created on the cluster false: only services with the cluster
                annotation name will be created on the cluster'
              type: boolean
            internal:
              description: 'true: Point pods as backends false: Point nodes as service
                backends'
              type: boolean
            rangeEnd:
              type: string
            rangeStart:
              type: string
            subnet:
              description: subnet to allocate from.
              type: string
            type:
              description: Cluster Type (NativeAgent,Custom) default NativeAgent
              type: string
          required:
          - subnet
          type: object
        status:
          properties:
            AllocatedNamespaces:
              type: object
            agents:
              type: object
            allocatedIps:
              type: object
            connectionStatus:
              type: string
            lastUpdate:
              format: date-time
              type: string
          required:
          - connectionStatus
          - lastUpdate
          type: object
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: farms.k8s.native-lb
spec:
  group: k8s.native-lb
  names:
    kind: Farm
    plural: farms
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cluster:
              type: string
            ports:
              items:
                type: object
              type: array
            servers:
              type: object
            serviceName:
              type: string
            serviceNamespace:
              type: string
          required:
          - serviceName
          - serviceNamespace
          - cluster
          - ports
          - servers
          type: object
        status:
          properties:
            ipAdress:
              type: string
            nodeList:
              items:
                type: string
              type: array
          type: object
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: servers.k8s.native-lb
spec:
  group: k8s.native-lb
  names:
    kind: Server
    plural: servers
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backendConnectionTimeout:
              type: string
            backendIdleTimeout:
              type: string
            balance:
              type: string
            bind:
              type: string
            clientIdleTimeout:
              type: string
            discovery:
              properties:
                backend:
                  items:
                    properties:
                      host:
                        type: string
                      port:
                        format: int32
                        type: integer
                      priority:
                        format: int64
                        type: integer
                      weight:
                        format: int64
                        type: integer
                    required:
                    - host
                    - port
                    type: object
                  type: array
                kind:
                  type: string
              required:
              - kind
              - backend
              type: object
            healthCheck:
              properties:
                fails:
                  format: int64
                  type: integer
                interval:
                  type: string
                kind:
                  type: string
                passes:
                  format: int64
                  type: integer
                pingTimeoutDuration:
                  type: string
                timeout:
                  type: string
              type: object
            maxConnections:
              format: int64
              type: integer
            port:
              format: int32
              type: integer
            protocol:
              type: string
            udp:
              properties:
                maxRequests:
                  format: int64
                  type: integer
                maxResponses:
                  format: int64
                  type: integer
              type: object
          required:
          - bind
          - port
          - protocol
          - balance
          - maxConnections
          - clientIdleTimeout
          - backendIdleTimeout
          - backendConnectionTimeout
          - discovery
          type: object
        status:
          properties:
            activeConnections:
              format: int64
              type: integer
            rxSecond:
              format: int64
              type: integer
            rxTotal:
              format: int64
              type: integer
            txSecond:
              format: int64
              type: integer
            txTotal:
              format: int64
              type: integer
          type: object
      required:
      - spec
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - k8s.nativelb
  resources:
  - agent
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: nativelb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s.nativelb.io/cluster: cluster-sample-cluster
  name: nativelb-agent-cluster
  namespace: nativelb
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s.nativelb.io/daemonset: nativelb-agent-cluster
  template:
    metadata:
      labels:
        daemonset.nativelb.io/port: "8000"
        k8s.nativelb.io/daemonset: nativelb-agent-cluster
    spec:
      containers:
      - env:
        - name: CONTROL_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONTROL_PORT
          value: "8000"
        - name: CLUSTER_NAME
          value: cluster-sample-cluster
        image: registry:5000/k8s-nativelb/nativelb-agent:latest
        imagePullPolicy: Always
        name: agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /var/proc/sys/net/ipv4/ip_nonlocal_bind
          name: bind
      terminationGracePeriodSeconds: 15
      volumes:
      - hostPath:
          path: /proc/sys/net/ipv4/ip_nonlocal_bind
        name: bind
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: nativelb-controller
  name: nativelb-controller
  namespace: nativelb
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: nativelb-controller
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        control-plane: nativelb-controller
    spec:
      containers:
      - image: registry:5000/k8s-nativelb/nativelb-controller:latest
        imagePullPolicy: Always
        name: controller
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 200Mi
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s.nativelb.io/cluster: cluster-internal
  name: nativelb-agent
  namespace: nativelb
spec:
  selector:
    matchLabels:
      k8s.nativelb.io/daemonset: nativelb-agent
  template:
    metadata:
      labels:
        daemonset.nativelb.io/port: "8000"
        k8s.nativelb.io/daemonset: nativelb-agent
    spec:
      containers:
      - env:
        - name: CONTROL_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONTROL_PORT
          value: "8000"
        - name: CLUSTER_NAME
          value: cluster-internal
        image: registry:5000/k8s-nativelb/nativelb-agent:latest
        imagePullPolicy: Always
        name: agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /var/proc/sys/net/ipv4/ip_nonlocal_bind
          name: bind
      hostNetwork: true
      terminationGracePeriodSeconds: 15
      volumes:
      - hostPath:
          path: /proc/sys/net/ipv4/ip_nonlocal_bind
        name: bind
---
apiVersion: k8s.native-lb/v1
kind: Cluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: cluster-external
  namespace: nativelb
spec:
  default: false
  internal: false
  subnet: 11.0.0.0/24
---
apiVersion: k8s.native-lb/v1
kind: Cluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
    k8s.nativelb.io/default: "true"
  name: cluster-internal
  namespace: nativelb
spec:
  default: true
  internal: true
  subnet: 10.0.0.0/24
---
apiVersion: k8s.native-lb/v1
kind: Cluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: cluster-sample-cluster
  namespace: nativelb
spec:
  default: false
  internal: true
  rangeStart: 10.0.0.10
  subnet: 10.0.0.0/24
